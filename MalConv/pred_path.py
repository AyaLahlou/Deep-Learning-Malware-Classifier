from os.path import join
import argparse
import os
import time
import pickle
import argparse
import pandas as pd
import numpy as np
from keras.preprocessing.sequence import pad_sequences
import pickle
import warnings
import pandas as pd
from keras.callbacks import ModelCheckpoint, EarlyStopping
from keras.models import load_model

parser = argparse.ArgumentParser(description='Malconv-keras classifier')
parser.add_argument('--model_path', type=str, default='../saved/malconv.h5')

def predict(model, path):
    corpus=[]
    max_len = model.input.shape[1]
    for fn in fn_list:
        with open(fn, 'rb') as f:
            corpus.append(f.read())
    corpus = [[byte for byte in doc] for doc in corpus]
    seq=pad_sequences(corpus, maxlen=max_len,padding='post',truncating='post')
    pred = model.predict(seq)


    return pred


if __name__ == '__main__':
    args = parser.parse_args()

    model = load_model(args.model_path)
    fn_list=['/Users/aya/Desktop/test.jpg','/Users/aya/Desktop/test2.jpg']  #change with your array of filepaths
    # read data
    label = np.zeros(1)

    pred = predict(model, fn_list)
    print(pred)
